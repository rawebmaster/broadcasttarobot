import asyncio
import schedule
import time
from aiogram import Bot, Dispatcher
import mysql.connector


USERS = ()
print(type(USERS))

def collecting_users_id():
    mydb.reconnect()
    mycursor = mydb.cursor()
    #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ë–î
    mycursor.execute(f"SELECT user_id FROM `TARO_USERS` WHERE played_today=0")
    myresult = mycursor.fetchall()
    global USERS
    for i in myresult:
        temp_list = list(USERS)
        temp_list.append(i[0])
        USERS = tuple(temp_list)
    print(USERS)

collecting_users_id()



async def send_message(user_id, message):
    try:
        await bot.send_message(user_id, message)
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

async def send_messages():
    message = "üå†–í—Ä–µ–º—è –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç—É –¢–∞—Ä–æ!"
    tasks = [send_message(user_id, message) for user_id in USERS]
    await asyncio.gather(*tasks)

def job():
    asyncio.run(send_messages())

if __name__ == "__main__":
    bot = Bot(token='')
    dp = Dispatcher()

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 8 —É—Ç—Ä–∞
    schedule.every().day.at("08:00").do(job)

    print("–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 8 —É—Ç—Ä–∞.")

    while True:
        schedule.run_pending()
        time.sleep(1)
